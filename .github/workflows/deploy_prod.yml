# This is a basic workflow to help you get started with Actions

name: Production

# Controls when the action will run.
on:
  push:
    branches:
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  node-version: 18

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v4
        with:
          ref: master
      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node-version }}
      - name: Install Yarn
        run: npm install -g yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "value=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.value }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Dependencies
        run: yarn
      - name: Copy env
        run: cp .env.example .env
      - name: Build Production
        run: yarn build
        env:
          #   SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          REACT_APP_SENTRY_ENVIRONMENT: production
          CI: false
      - name: Import Firebase service account credentials
        id: import-credentials
        run: |
          echo ${{ secrets.FIREBASE_DEPLOYER_CREDENTIALS }} | base64 -d > $(pwd)/serviceaccount.json
          echo "file_path=$(pwd)/serviceaccount.json" >> $GITHUB_OUTPUT

      - name: Deploy to firebase
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.import-credentials.outputs.file_path }}
        run: yarn firebase deploy --only hosting:homebase-oraichain -m "${{ github.event.head_commit.message }}"

      - name: Clean up
        run: rm -rf serviceaccount.json

      - name: Send discord message
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
          username: 'GitBot [oraiswap-frontend]'
          message: ':loudspeaker: Repo homebase has just published by ${{ github.event.head_commit.author.name }}'
